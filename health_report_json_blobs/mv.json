{"result":"OK","domain":"mv.","id":15766658,"time":1485320507,"dnscheckversion":"1.6.2","tree":[{"type":0,"class":"ok","caption":"Delegation","subtree":[]},{"type":0,"class":"ok","caption":"Nameserver","subtree":[{"type":1,"class":"ok","caption":"Nameserver mv-ns.anycast.pch.net","subtree":[]},{"type":1,"class":"ok","caption":"Nameserver ns.dhivehinet.net.mv","subtree":[]},{"type":1,"class":"ok","caption":"Nameserver ns.mv","subtree":[]},{"type":1,"class":"ok","caption":"Nameserver ns2.dhivehinet.net.mv","subtree":[]}]},{"type":0,"class":"ok","caption":"Consistency","subtree":[]},{"type":0,"class":"ok","caption":"SOA","subtree":[]},{"type":0,"class":"off","caption":"Connectivity","subtree":[]},{"type":0,"class":"off","caption":"DNSSEC","subtree":[]}],"list":[{"type":0,"class":"","caption":"Delegation","subtree":[{"type":2,"class":"","caption":"Begin testing delegation for mv..","subtree":[]},{"type":2,"class":"","caption":"Name servers listed at parent: mv-ns.anycast.pch.net,ns.dhivehinet.net.mv,ns2.dhivehinet.net.mv","subtree":[],"description":"This is the list of name servers that are listed at the parent. It should include all name servers listed at the child."},{"type":2,"class":"","caption":"Name servers listed at child: mv-ns.anycast.pch.net,ns.dhivehinet.net.mv,ns.mv,ns2.dhivehinet.net.mv","subtree":[],"description":"This is the list of name servers that are listed at the child. It must include all name servers listed at the parent."},{"type":2,"class":"notice","caption":"Additional name server listed at child: ns.mv","subtree":[],"description":"A name server listed at the child, but not at the parent, was found. This is most likely a configuration error, but there are sometimes reasons for setting up a zone this way."},{"type":2,"class":"notice","caption":"Too few IPv6 name servers (1).","subtree":[],"description":"Only one IPv6 name server was found for the zone. You should always have at least two IPv6 name servers for a zone to be able to handle transient connectivity problems."},{"type":2,"class":"","caption":"Parent glue for mv found: ns.dhivehinet.net.mv (202.1.192.196)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mv found: ns2.dhivehinet.net.mv (202.1.201.201)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Checking glue for ns.dhivehinet.net.mv (202.1.192.196).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mv found: ns.dhivehinet.net.mv (202.1.192.196)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Checking glue for ns2.dhivehinet.net.mv (202.1.201.201).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mv found: ns2.dhivehinet.net.mv (202.1.201.201)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Parent glue for mv. found: ns.dhivehinet.net.mv (202.1.192.196)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mv. found: ns2.dhivehinet.net.mv (202.1.201.201)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"It is possible to build a referral packet for mv. that works without EDNS0.","subtree":[]},{"type":2,"class":"","caption":"Previously used name servers for mv.: ","subtree":[]},{"type":2,"class":"","caption":"Done testing delegation for mv..","subtree":[]}]},{"type":0,"class":"","caption":"Nameserver","subtree":[{"type":1,"class":"","caption":"Nameserver mv-ns.anycast.pch.net","subtree":[{"type":3,"class":"","caption":"Begin testing name server mv-ns.anycast.pch.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host mv-ns.anycast.pch.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 204.61.216.24.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 204.61.216.24.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 2001:500:14:6024:ad:0:0:1.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 2001:500:14:6024:ad:0:0:1.","subtree":[]},{"type":3,"class":"","caption":"Done testing host mv-ns.anycast.pch.net.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (204.61.216.24) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (204.61.216.24) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (204.61.216.24) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (204.61.216.24) authoritative for mv..","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (2001:500:14:6024:ad:0:0:1) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (2001:500:14:6024:ad:0:0:1) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (2001:500:14:6024:ad:0:0:1) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server mv-ns.anycast.pch.net (2001:500:14:6024:ad:0:0:1) authoritative for mv..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server mv-ns.anycast.pch.net.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver ns.dhivehinet.net.mv","subtree":[{"type":3,"class":"","caption":"Begin testing name server ns.dhivehinet.net.mv.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host ns.dhivehinet.net.mv.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 202.1.192.196.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 202.1.192.196.","subtree":[]},{"type":3,"class":"","caption":"Done testing host ns.dhivehinet.net.mv.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.dhivehinet.net.mv (202.1.192.196) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.dhivehinet.net.mv (202.1.192.196) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.dhivehinet.net.mv (202.1.192.196) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.dhivehinet.net.mv (202.1.192.196) authoritative for mv..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server ns.dhivehinet.net.mv.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver ns.mv","subtree":[{"type":3,"class":"","caption":"Begin testing name server ns.mv.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host ns.mv.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 202.1.192.196.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 202.1.192.196.","subtree":[]},{"type":3,"class":"","caption":"Done testing host ns.mv.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.mv (202.1.192.196) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.mv (202.1.192.196) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.mv (202.1.192.196) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server ns.mv (202.1.192.196) authoritative for mv..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server ns.mv.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver ns2.dhivehinet.net.mv","subtree":[{"type":3,"class":"","caption":"Begin testing name server ns2.dhivehinet.net.mv.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host ns2.dhivehinet.net.mv.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 202.1.201.201.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 202.1.201.201.","subtree":[]},{"type":3,"class":"","caption":"Done testing host ns2.dhivehinet.net.mv.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.dhivehinet.net.mv (202.1.201.201) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.dhivehinet.net.mv (202.1.201.201) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.dhivehinet.net.mv (202.1.201.201) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.dhivehinet.net.mv (202.1.201.201) authoritative for mv..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server ns2.dhivehinet.net.mv.","subtree":[]}]}]},{"type":0,"class":"","caption":"Consistency","subtree":[{"type":2,"class":"","caption":"Begin testing zone consistency for mv..","subtree":[]},{"type":2,"class":"","caption":"SOA at address 202.1.192.196 has serial 2017012401.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 2001:500:14:6024:ad:0:0:1 has serial 2017012401.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 204.61.216.24 has serial 2017012401.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 202.1.201.201 has serial 2017012401.","subtree":[]},{"type":2,"class":"","caption":"All SOA records have consistent serial numbers.","subtree":[]},{"type":2,"class":"","caption":"All other fields in the SOA record are consistent among all name servers.","subtree":[]},{"type":2,"class":"notice","caption":"The listed nameservers for mv. all report the same set of nameservers.","subtree":[]},{"type":2,"class":"","caption":"Done testing zone consistency for mv..","subtree":[]}]},{"type":0,"class":"","caption":"SOA","subtree":[{"type":2,"class":"","caption":"Begin testing SOA parameters for mv..","subtree":[]},{"type":2,"class":"","caption":"Found SOA record for mv..","subtree":[]},{"type":2,"class":"","caption":"Begin testing host ns.mv.","subtree":[]},{"type":2,"class":"","caption":"Begin testing address 202.1.192.196.","subtree":[]},{"type":2,"class":"","caption":"Done testing address 202.1.192.196.","subtree":[]},{"type":2,"class":"","caption":"Done testing host ns.mv.","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mv. valid (ns.mv).","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mv. (ns.mv) listed as NS.","subtree":[],"description":"The name server listed as the SOA MNAME is listed as a name server."},{"type":2,"class":"","caption":"SOA MNAME for mv. (ns.mv) is authoritative.","subtree":[]},{"type":2,"class":"","caption":"Successful attempt to deliver email for SOA RNAME of mv. (hostmaster.dhivehinet.net.mv) using hostmaster@dhivehinet.net.mv.","subtree":[]},{"type":2,"class":"","caption":"SOA TTL for mv. OK (3600) - recommended >= 3600.","subtree":[]},{"type":2,"class":"notice","caption":"SOA refresh for mv. too small (1800) - recommended >= 14400.","subtree":[],"description":"SOA refresh decides how often a secondary name server should check the primary name server for zone updates."},{"type":2,"class":"notice","caption":"SOA refresh for mv. lower than retry (1800 vs 1800).","subtree":[],"description":"The retry value is the amount of time secondary name servers will wait before contacting the primary name server again if the last attempt failed.  If the refresh value is lower than the retry value, it's useless."},{"type":2,"class":"notice","caption":"SOA retry for mv. too small (1800) - recommended >= 3600.","subtree":[],"description":"The retry value is the amount of time secondary name servers will wait before contacting the primary name server again if the last attempt failed. If the retry value is too small, secondary name servers will retry too frequently."},{"type":2,"class":"notice","caption":"SOA expire for mv. too small (3600) - recommended >= 604800.","subtree":[],"description":"The SOA expire value defines how long a secondary name server will wait before considering DNS data for a zone to be too old to serve in case it fails to reach the primary name server."},{"type":2,"class":"notice","caption":"SOA expire for mv. lower than refresh.","subtree":[],"description":"The SOA expire value should be at least 7 times the SOA refresh value, to give secondary name servers a fair chance of refreshing their copy of the zone before the data is considered too old to serve."},{"type":2,"class":"","caption":"SOA minimum for mv. OK (3600) - recommended between 300 and 86400.","subtree":[]},{"type":2,"class":"","caption":"Done testing SOA parameters for mv..","subtree":[]}]},{"type":0,"class":"","caption":"Connectivity","subtree":[]},{"type":0,"class":"","caption":"DNSSEC","subtree":[{"type":2,"class":"","caption":"Begin testing DNSSEC for mv..","subtree":[]},{"type":2,"class":"","caption":"Did not find DS record for mv. at parent.","subtree":[],"description":"A DS (delegation signer) RRset could not be found at the parent.  This indicates an insecure delegation, i.e. the child does not have to be signed."},{"type":2,"class":"","caption":"Servers for mv. have consistent extra processing status.","subtree":[]},{"type":2,"class":"","caption":"Authenticated denial records not found for mv..","subtree":[]},{"type":2,"class":"","caption":"Did not find DNSKEY record for mv. at child.","subtree":[],"description":"A DNSKEY RRset could not be found at the child, indicating that the child probably does not use DNSSEC."},{"type":2,"class":"","caption":"No DNSKEY(s) found at child, other tests skipped.","subtree":[]},{"type":2,"class":"","caption":"Done testing DNSSEC for mv..","subtree":[]}]}],"sourceData":""}