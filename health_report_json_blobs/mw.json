{"result":"ERROR","domain":"mw.","id":15766657,"time":1485320507,"dnscheckversion":"1.6.2","tree":[{"type":0,"class":"error","caption":"Delegation","subtree":[{"type":2,"class":"error","caption":"Inconsistent glue for name server domwe.sdn.mw.","subtree":[],"description":"The address of a name server differed between the child and the parent.  This is a configuration error and should be corrected as soon as possible."}]},{"type":0,"class":"warn","caption":"Nameserver","subtree":[{"type":1,"class":"ok","caption":"Nameserver chambo.sdnp.org.mw","subtree":[]},{"type":1,"class":"warn","caption":"Nameserver domwe.sdn.mw","subtree":[{"type":3,"class":"warn","caption":"Name server domwe.sdn.mw (196.45.190.9) is recursive.","subtree":[],"description":"The name server answers recursive queries for 3rd parties (such as DNSCheck). By making a recursive query to a name server that provides recursion, an attacker can cause a name server to look up and cache information contained in zones under their control. Thus the victim name server is made to query the attacker's malicious name servers, resulting in the victim caching and serving bogus data."}]},{"type":1,"class":"ok","caption":"Nameserver mw.cctld.authdns.ripe.net","subtree":[]},{"type":1,"class":"ok","caption":"Nameserver rip.psg.com","subtree":[]},{"type":1,"class":"ok","caption":"Nameserver sec3.apnic.net","subtree":[]}]},{"type":0,"class":"ok","caption":"Consistency","subtree":[]},{"type":0,"class":"ok","caption":"SOA","subtree":[]},{"type":0,"class":"off","caption":"Connectivity","subtree":[]},{"type":0,"class":"off","caption":"DNSSEC","subtree":[]}],"list":[{"type":0,"class":"","caption":"Delegation","subtree":[{"type":2,"class":"","caption":"Begin testing delegation for mw..","subtree":[]},{"type":2,"class":"","caption":"Name servers listed at parent: chambo.sdnp.org.mw,domwe.sdn.mw,mw.cctld.authdns.ripe.net,rip.psg.com,sec3.apnic.net","subtree":[],"description":"This is the list of name servers that are listed at the parent. It should include all name servers listed at the child."},{"type":2,"class":"","caption":"Name servers listed at child: chambo.sdnp.org.mw,domwe.sdn.mw,mw.cctld.authdns.ripe.net,rip.psg.com,sec3.apnic.net","subtree":[],"description":"This is the list of name servers that are listed at the child. It must include all name servers listed at the parent."},{"type":2,"class":"","caption":"Parent glue for mw found: chambo.sdnp.org.mw (196.45.188.5)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mw found: chambo.sdnp.org.mw (41.221.99.135)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mw found: domwe.sdn.mw (196.45.190.9)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mw found: domwe.sdn.mw (41.221.99.149)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Checking glue for chambo.sdnp.org.mw (196.45.188.5).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mw found: chambo.sdnp.org.mw (196.45.188.5)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Checking glue for chambo.sdnp.org.mw (41.221.99.135).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mw found: chambo.sdnp.org.mw (41.221.99.135)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Checking glue for domwe.sdn.mw (196.45.190.9).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mw found: domwe.sdn.mw (196.45.190.9)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Checking glue for domwe.sdn.mw (41.221.99.149).","subtree":[]},{"type":2,"class":"error","caption":"Inconsistent glue for name server domwe.sdn.mw.","subtree":[],"description":"The address of a name server differed between the child and the parent.  This is a configuration error and should be corrected as soon as possible."},{"type":2,"class":"","caption":"Parent glue for mw. found: chambo.sdnp.org.mw (196.45.188.5)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mw. found: chambo.sdnp.org.mw (41.221.99.135)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mw. found: domwe.sdn.mw (41.221.99.149)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mw. found: domwe.sdn.mw (196.45.190.9)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"It is possible to build a referral packet for mw. that works without EDNS0.","subtree":[]},{"type":2,"class":"","caption":"Previously used name servers for mw.: ","subtree":[]},{"type":2,"class":"","caption":"Done testing delegation for mw..","subtree":[]}]},{"type":0,"class":"","caption":"Nameserver","subtree":[{"type":1,"class":"","caption":"Nameserver chambo.sdnp.org.mw","subtree":[{"type":3,"class":"","caption":"Begin testing name server chambo.sdnp.org.mw.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host chambo.sdnp.org.mw.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 196.45.188.5.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 196.45.188.5.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 41.221.99.135.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 41.221.99.135.","subtree":[]},{"type":3,"class":"","caption":"Done testing host chambo.sdnp.org.mw.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (196.45.188.5) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (196.45.188.5) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (196.45.188.5) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (196.45.188.5) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (41.221.99.135) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (41.221.99.135) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (41.221.99.135) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server chambo.sdnp.org.mw (41.221.99.135) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server chambo.sdnp.org.mw.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver domwe.sdn.mw","subtree":[{"type":3,"class":"","caption":"Begin testing name server domwe.sdn.mw.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host domwe.sdn.mw.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 196.45.190.9.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 196.45.190.9.","subtree":[]},{"type":3,"class":"","caption":"Done testing host domwe.sdn.mw.","subtree":[]},{"type":3,"class":"","caption":"Name server domwe.sdn.mw (196.45.190.9) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server domwe.sdn.mw (196.45.190.9) answers queries over TCP.","subtree":[]},{"type":3,"class":"warn","caption":"Name server domwe.sdn.mw (196.45.190.9) is recursive.","subtree":[],"description":"The name server answers recursive queries for 3rd parties (such as DNSCheck). By making a recursive query to a name server that provides recursion, an attacker can cause a name server to look up and cache information contained in zones under their control. Thus the victim name server is made to query the attacker's malicious name servers, resulting in the victim caching and serving bogus data."},{"type":3,"class":"","caption":"Name server domwe.sdn.mw (196.45.190.9) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server domwe.sdn.mw.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver mw.cctld.authdns.ripe.net","subtree":[{"type":3,"class":"","caption":"Begin testing name server mw.cctld.authdns.ripe.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host mw.cctld.authdns.ripe.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 193.0.9.99.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 193.0.9.99.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 2001:67c:e0:0:0:0:0:99.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 2001:67c:e0:0:0:0:0:99.","subtree":[]},{"type":3,"class":"","caption":"Done testing host mw.cctld.authdns.ripe.net.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (193.0.9.99) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (193.0.9.99) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (193.0.9.99) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (193.0.9.99) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:99) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:99) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:99) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server mw.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:99) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server mw.cctld.authdns.ripe.net.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver rip.psg.com","subtree":[{"type":3,"class":"","caption":"Begin testing name server rip.psg.com.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host rip.psg.com.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 147.28.0.39.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 147.28.0.39.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 2001:418:1:0:0:0:0:39.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 2001:418:1:0:0:0:0:39.","subtree":[]},{"type":3,"class":"","caption":"Done testing host rip.psg.com.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (147.28.0.39) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (147.28.0.39) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (147.28.0.39) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (147.28.0.39) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (2001:418:1:0:0:0:0:39) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (2001:418:1:0:0:0:0:39) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (2001:418:1:0:0:0:0:39) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server rip.psg.com (2001:418:1:0:0:0:0:39) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server rip.psg.com.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver sec3.apnic.net","subtree":[{"type":3,"class":"","caption":"Begin testing name server sec3.apnic.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host sec3.apnic.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 202.12.28.140.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 202.12.28.140.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 2001:dc0:1:0:4777:0:0:140.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 2001:dc0:1:0:4777:0:0:140.","subtree":[]},{"type":3,"class":"","caption":"Done testing host sec3.apnic.net.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (202.12.28.140) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (202.12.28.140) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (202.12.28.140) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (202.12.28.140) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (2001:dc0:1:0:4777:0:0:140) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (2001:dc0:1:0:4777:0:0:140) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (2001:dc0:1:0:4777:0:0:140) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server sec3.apnic.net (2001:dc0:1:0:4777:0:0:140) authoritative for mw..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server sec3.apnic.net.","subtree":[]}]}]},{"type":0,"class":"","caption":"Consistency","subtree":[{"type":2,"class":"","caption":"Begin testing zone consistency for mw..","subtree":[]},{"type":2,"class":"","caption":"SOA at address 2001:dc0:1:0:4777:0:0:140 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 196.45.188.5 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 147.28.0.39 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 193.0.9.99 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 202.12.28.140 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 41.221.99.135 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 2001:418:1:0:0:0:0:39 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 2001:67c:e0:0:0:0:0:99 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 196.45.190.9 has serial 1485317101.","subtree":[]},{"type":2,"class":"","caption":"All SOA records have consistent serial numbers.","subtree":[]},{"type":2,"class":"","caption":"All other fields in the SOA record are consistent among all name servers.","subtree":[]},{"type":2,"class":"notice","caption":"The listed nameservers for mw. all report the same set of nameservers.","subtree":[]},{"type":2,"class":"","caption":"Done testing zone consistency for mw..","subtree":[]}]},{"type":0,"class":"","caption":"SOA","subtree":[{"type":2,"class":"","caption":"Begin testing SOA parameters for mw..","subtree":[]},{"type":2,"class":"","caption":"Found SOA record for mw..","subtree":[]},{"type":2,"class":"","caption":"Begin testing host chambo.sdnp.org.mw.","subtree":[]},{"type":2,"class":"","caption":"Begin testing address 196.45.188.5.","subtree":[]},{"type":2,"class":"","caption":"Done testing address 196.45.188.5.","subtree":[]},{"type":2,"class":"","caption":"Begin testing address 41.221.99.135.","subtree":[]},{"type":2,"class":"","caption":"Done testing address 41.221.99.135.","subtree":[]},{"type":2,"class":"","caption":"Done testing host chambo.sdnp.org.mw.","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mw. valid (chambo.sdnp.org.mw).","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mw. (chambo.sdnp.org.mw) listed as NS.","subtree":[],"description":"The name server listed as the SOA MNAME is listed as a name server."},{"type":2,"class":"","caption":"SOA MNAME for mw. (chambo.sdnp.org.mw) is authoritative.","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mw. (chambo.sdnp.org.mw) is authoritative.","subtree":[]},{"type":2,"class":"","caption":"Successful attempt to deliver email for SOA RNAME of mw. (domains.registrar.mw) using domains@registrar.mw.","subtree":[]},{"type":2,"class":"","caption":"SOA TTL for mw. OK (18000) - recommended >= 3600.","subtree":[]},{"type":2,"class":"notice","caption":"SOA refresh for mw. too small (1800) - recommended >= 14400.","subtree":[],"description":"SOA refresh decides how often a secondary name server should check the primary name server for zone updates."},{"type":2,"class":"notice","caption":"SOA retry for mw. too small (600) - recommended >= 3600.","subtree":[],"description":"The retry value is the amount of time secondary name servers will wait before contacting the primary name server again if the last attempt failed. If the retry value is too small, secondary name servers will retry too frequently."},{"type":2,"class":"","caption":"SOA expire for mw. OK (604800) - recommended >= 604800.","subtree":[]},{"type":2,"class":"","caption":"SOA minimum for mw. OK (1800) - recommended between 300 and 86400.","subtree":[]},{"type":2,"class":"","caption":"Done testing SOA parameters for mw..","subtree":[]}]},{"type":0,"class":"","caption":"Connectivity","subtree":[]},{"type":0,"class":"","caption":"DNSSEC","subtree":[{"type":2,"class":"","caption":"Begin testing DNSSEC for mw..","subtree":[]},{"type":2,"class":"","caption":"Did not find DS record for mw. at parent.","subtree":[],"description":"A DS (delegation signer) RRset could not be found at the parent.  This indicates an insecure delegation, i.e. the child does not have to be signed."},{"type":2,"class":"","caption":"Servers for mw. have consistent extra processing status.","subtree":[]},{"type":2,"class":"","caption":"Authenticated denial records not found for mw..","subtree":[]},{"type":2,"class":"","caption":"Did not find DNSKEY record for mw. at child.","subtree":[],"description":"A DNSKEY RRset could not be found at the child, indicating that the child probably does not use DNSSEC."},{"type":2,"class":"","caption":"No DNSKEY(s) found at child, other tests skipped.","subtree":[]},{"type":2,"class":"","caption":"Done testing DNSSEC for mw..","subtree":[]}]}],"sourceData":""}