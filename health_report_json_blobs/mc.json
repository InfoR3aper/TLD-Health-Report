{"result":"WARNING","domain":"mc.","id":15766723,"time":1485320784,"dnscheckversion":"1.6.2","tree":[{"type":0,"class":"ok","caption":"Delegation","subtree":[]},{"type":0,"class":"warn","caption":"Nameserver","subtree":[{"type":1,"class":"ok","caption":"Nameserver mc.cctld.authdns.ripe.net","subtree":[]},{"type":1,"class":"ok","caption":"Nameserver ns1.nic.mc","subtree":[]},{"type":1,"class":"warn","caption":"Nameserver ns2.nic.mc","subtree":[{"type":3,"class":"warn","caption":"Could not find reverse address for 85.31.217.131 (131.217.31.85.in-addr.arpa.).","subtree":[],"description":"PTR record(s) for the address could not be found in the .arpa-zone. (ip6.arpa. for IPv6 addresses and in-addr.arpa. for IPv4)."}]}]},{"type":0,"class":"ok","caption":"Consistency","subtree":[]},{"type":0,"class":"ok","caption":"SOA","subtree":[]},{"type":0,"class":"off","caption":"Connectivity","subtree":[]},{"type":0,"class":"off","caption":"DNSSEC","subtree":[]}],"list":[{"type":0,"class":"","caption":"Delegation","subtree":[{"type":2,"class":"","caption":"Begin testing delegation for mc..","subtree":[]},{"type":2,"class":"","caption":"Name servers listed at parent: mc.cctld.authdns.ripe.net,ns1.nic.mc,ns2.nic.mc","subtree":[],"description":"This is the list of name servers that are listed at the parent. It should include all name servers listed at the child."},{"type":2,"class":"","caption":"Name servers listed at child: mc.cctld.authdns.ripe.net,ns1.nic.mc,ns2.nic.mc","subtree":[],"description":"This is the list of name servers that are listed at the child. It must include all name servers listed at the parent."},{"type":2,"class":"notice","caption":"Too few IPv6 name servers (1).","subtree":[],"description":"Only one IPv6 name server was found for the zone. You should always have at least two IPv6 name servers for a zone to be able to handle transient connectivity problems."},{"type":2,"class":"","caption":"Parent glue for mc found: ns1.nic.mc (195.78.19.216)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mc found: ns2.nic.mc (85.31.217.131)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Checking glue for ns1.nic.mc (195.78.19.216).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mc found: ns1.nic.mc (195.78.19.216)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Checking glue for ns2.nic.mc (85.31.217.131).","subtree":[]},{"type":2,"class":"","caption":"Child glue for mc found: ns2.nic.mc (85.31.217.131)","subtree":[],"description":"The IP address of the name server was found at the child."},{"type":2,"class":"","caption":"Parent glue for mc. found: ns1.nic.mc (195.78.19.216)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"Parent glue for mc. found: ns2.nic.mc (85.31.217.131)","subtree":[],"description":"The IP address of the name server was found at the parent."},{"type":2,"class":"","caption":"It is possible to build a referral packet for mc. that works without EDNS0.","subtree":[]},{"type":2,"class":"","caption":"Previously used name servers for mc.: ","subtree":[]},{"type":2,"class":"","caption":"Done testing delegation for mc..","subtree":[]}]},{"type":0,"class":"","caption":"Nameserver","subtree":[{"type":1,"class":"","caption":"Nameserver mc.cctld.authdns.ripe.net","subtree":[{"type":3,"class":"","caption":"Begin testing name server mc.cctld.authdns.ripe.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host mc.cctld.authdns.ripe.net.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 193.0.9.92.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 193.0.9.92.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 2001:67c:e0:0:0:0:0:92.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 2001:67c:e0:0:0:0:0:92.","subtree":[]},{"type":3,"class":"","caption":"Done testing host mc.cctld.authdns.ripe.net.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (193.0.9.92) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (193.0.9.92) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (193.0.9.92) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (193.0.9.92) authoritative for mc..","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:92) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:92) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:92) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server mc.cctld.authdns.ripe.net (2001:67c:e0:0:0:0:0:92) authoritative for mc..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server mc.cctld.authdns.ripe.net.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver ns1.nic.mc","subtree":[{"type":3,"class":"","caption":"Begin testing name server ns1.nic.mc.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host ns1.nic.mc.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 195.78.19.216.","subtree":[]},{"type":3,"class":"","caption":"Done testing address 195.78.19.216.","subtree":[]},{"type":3,"class":"","caption":"Done testing host ns1.nic.mc.","subtree":[]},{"type":3,"class":"","caption":"Name server ns1.nic.mc (195.78.19.216) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns1.nic.mc (195.78.19.216) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns1.nic.mc (195.78.19.216) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server ns1.nic.mc (195.78.19.216) authoritative for mc..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server ns1.nic.mc.","subtree":[]}]},{"type":1,"class":"","caption":"Nameserver ns2.nic.mc","subtree":[{"type":3,"class":"","caption":"Begin testing name server ns2.nic.mc.","subtree":[]},{"type":3,"class":"","caption":"Begin testing host ns2.nic.mc.","subtree":[]},{"type":3,"class":"","caption":"Begin testing address 85.31.217.131.","subtree":[]},{"type":3,"class":"warn","caption":"Could not find reverse address for 85.31.217.131 (131.217.31.85.in-addr.arpa.).","subtree":[],"description":"PTR record(s) for the address could not be found in the .arpa-zone. (ip6.arpa. for IPv6 addresses and in-addr.arpa. for IPv4)."},{"type":3,"class":"","caption":"Done testing address 85.31.217.131.","subtree":[]},{"type":3,"class":"","caption":"Done testing host ns2.nic.mc.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.nic.mc (85.31.217.131) answers queries over UDP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.nic.mc (85.31.217.131) answers queries over TCP.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.nic.mc (85.31.217.131) is not recursive.","subtree":[]},{"type":3,"class":"","caption":"Name server ns2.nic.mc (85.31.217.131) authoritative for mc..","subtree":[]},{"type":3,"class":"","caption":"Done testing name server ns2.nic.mc.","subtree":[]}]}]},{"type":0,"class":"","caption":"Consistency","subtree":[{"type":2,"class":"","caption":"Begin testing zone consistency for mc..","subtree":[]},{"type":2,"class":"","caption":"SOA at address 195.78.19.216 has serial 2017012302.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 85.31.217.131 has serial 2017012302.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 2001:67c:e0:0:0:0:0:92 has serial 2017012302.","subtree":[]},{"type":2,"class":"","caption":"SOA at address 193.0.9.92 has serial 2017012302.","subtree":[]},{"type":2,"class":"","caption":"All SOA records have consistent serial numbers.","subtree":[]},{"type":2,"class":"","caption":"All other fields in the SOA record are consistent among all name servers.","subtree":[]},{"type":2,"class":"notice","caption":"The listed nameservers for mc. all report the same set of nameservers.","subtree":[]},{"type":2,"class":"","caption":"Done testing zone consistency for mc..","subtree":[]}]},{"type":0,"class":"","caption":"SOA","subtree":[{"type":2,"class":"","caption":"Begin testing SOA parameters for mc..","subtree":[]},{"type":2,"class":"","caption":"Found SOA record for mc..","subtree":[]},{"type":2,"class":"","caption":"Begin testing host ns1.nic.mc.","subtree":[]},{"type":2,"class":"","caption":"Begin testing address 195.78.19.216.","subtree":[]},{"type":2,"class":"","caption":"Done testing address 195.78.19.216.","subtree":[]},{"type":2,"class":"","caption":"Done testing host ns1.nic.mc.","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mc. valid (ns1.nic.mc).","subtree":[]},{"type":2,"class":"","caption":"SOA MNAME for mc. (ns1.nic.mc) listed as NS.","subtree":[],"description":"The name server listed as the SOA MNAME is listed as a name server."},{"type":2,"class":"","caption":"SOA MNAME for mc. (ns1.nic.mc) is authoritative.","subtree":[]},{"type":2,"class":"","caption":"Successful attempt to deliver email for SOA RNAME of mc. (root.nic.mc) using root@nic.mc.","subtree":[]},{"type":2,"class":"","caption":"SOA TTL for mc. OK (3600) - recommended >= 3600.","subtree":[]},{"type":2,"class":"notice","caption":"SOA refresh for mc. too small (10800) - recommended >= 14400.","subtree":[],"description":"SOA refresh decides how often a secondary name server should check the primary name server for zone updates."},{"type":2,"class":"","caption":"SOA retry for mc. OK (7200) - recommended >= 3600.","subtree":[]},{"type":2,"class":"","caption":"SOA expire for mc. OK (604800) - recommended >= 604800.","subtree":[]},{"type":2,"class":"","caption":"SOA minimum for mc. OK (3600) - recommended between 300 and 86400.","subtree":[]},{"type":2,"class":"","caption":"Done testing SOA parameters for mc..","subtree":[]}]},{"type":0,"class":"","caption":"Connectivity","subtree":[]},{"type":0,"class":"","caption":"DNSSEC","subtree":[{"type":2,"class":"","caption":"Begin testing DNSSEC for mc..","subtree":[]},{"type":2,"class":"","caption":"Did not find DS record for mc. at parent.","subtree":[],"description":"A DS (delegation signer) RRset could not be found at the parent.  This indicates an insecure delegation, i.e. the child does not have to be signed."},{"type":2,"class":"","caption":"Servers for mc. have consistent extra processing status.","subtree":[]},{"type":2,"class":"","caption":"Authenticated denial records not found for mc..","subtree":[]},{"type":2,"class":"","caption":"Did not find DNSKEY record for mc. at child.","subtree":[],"description":"A DNSKEY RRset could not be found at the child, indicating that the child probably does not use DNSSEC."},{"type":2,"class":"","caption":"No DNSKEY(s) found at child, other tests skipped.","subtree":[]},{"type":2,"class":"","caption":"Done testing DNSSEC for mc..","subtree":[]}]}],"sourceData":""}